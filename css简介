<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>css简介</title>
    <!-- 第二种方式（内部样式表）
            -将样式编写到head中的style标签中，然后通过css的选择器来选中元素并为其设置各种样式，可以同时为多个标签设置样式，并且修改时只需要修改一处即可
            -内部样式表更加方便对样式的复用
            -问题：内部样式表只能对一个网页起到作用，不能跨网页复用
    -->
    <!-- <style>
        p{
            color:red;
            font-size: 50px;
        }
    </style> -->
    <!-- 
        第三种方式（外部样式表）最佳实践
            -可以将css样式编写到一个外部的css文件中，然后用link标签来引入外部css文件
            -外部样式表需要通过link标签进行引入，意味着只要想使用这些样式的网页都可以对其进行引用，使样式可以在不同页面之间进行复用
            -将样式编写到外部的css文件中，可以使用到浏览器的缓存机制，从而加快网页的加载速度，提高用户的体验
     -->
     <link rel="stylesheet" href="./style.css">
</head>
<body>
    <!-- 
        页面分为三个部分
        结构（http）
        表现（css）
        行为（javascript）

        css
            -层叠样式表
            -网页实际上是一个多层的结构，通过css可以分别为网页的每一个层次来设置样式
            -总结：css用来设置网页中元素的样式
     -->
     <!-- 使用css来修改元素的样式 -->
    <!-- 第一种方式（内联样式，行内样式）
        -在标签内部通过style属性来设置元素的样式
      <p style="color: red;font-size: 60px;">css简介</p> -->
      <p>css简介</p> 
</body>
</html>
-------------------------------------------------------------------------------
p{
    color: black;
    font-size: 30px;
}
